import requests
import socket

domain=raw_input("Enter domain name to test ")
buffer=''
swap=''
#DNS resolving
def getIPx(d):

    try:
        data = socket.gethostbyname_ex(d)
        ipx = repr(data[2])
        return ipx
    except Exception:
        # fail gracefully!
        return False
#ETags implementation

def Etags(d):
    global buffer,swap
    try:
        d="http://"+d
        for i in range(1,50):
            r=requests.get(url=d)

            if "Etag" in r.headers:
                swap=buffer
                buffer= r.headers['Etag']
                if(swap!=buffer):
                    print r.text
            else:
                print "No Etag"
                break
        d="https://"+d
        swap=''
        buffer=''
        for i in range(1,50):
            r=requests.get(url=d)
            if "Etag" in r.headers:
                swap=buffer
                buffer= r.headers['Etag']
                if (swap != buffer):
                    print r.text
            else:
                print "No Etag"
                break
    except:
        pass
def server(d):
    try:
        d="http://"+d
        for i in range(1,50):
            r=requests.get(url=d)
            if "Server" in r.headers:
                Server= r.headers['Server']
                if "Ngnix" or "Aws" in Server:
                    print "Reverse proxy used"
                    break
            else:
                print "No Server"
                break
        d="https://"+d
        for i in range(1,50):
            r=requests.get(url=d)
            if "Server" in r.headers:
                Server= r.headers['Server']
                if "Ngnix" or "Aws" in Server:
                    print "Reverse proxy used"
                    break
            else:
                print "No reverse proxy"
                break
    except:
        pass
Ips =getIPx(domain)
if(len(Ips)>1):
    print "DNS load balancer used"
Etags(domain)
server(domain)
