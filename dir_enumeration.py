import sys
from multiprocessing.pool import ThreadPool
import requests
import re
HASH_TYPE_REGEX = {
    re.compile(r"^[a-f0-9]{32}(:.+)?$", re.IGNORECASE):  ["MD5", "MD4", "MD2", "Double MD5",
                                                          "LM", "RIPEMD-128", "Haval-128",
                                                          "Tiger-128", "Skein-256(128)", "Skein-512(128",
                                                          "Lotus Notes/Domino 5", "Skype", "ZipMonster",
                                                          "PrestaShop"],
    re.compile(r"^[a-f0-9]{64}(:.+)?$", re.IGNORECASE):  ["SHA-256", "RIPEMD-256", "SHA3-256", "Haval-256",
                                                          "GOST R 34.11-94", "GOST CryptoPro S-Box",
                                                          "Skein-256", "Skein-512(256)", "Ventrilo"],
    re.compile(r"^[a-f0-9]{128}(:.+)?$", re.IGNORECASE): ["SHA-512", "Whirlpool", "Salsa10",
                                                          "Salsa20", "SHA3-512", "Skein-512",
                                                          "Skein-1024(512)"],
    re.compile(r"^[a-f0-9]{56}$", re.IGNORECASE):        ["SHA-224", "Haval-224", "SHA3-224",
                                                          "Skein-256(224)", "Skein-512(224)"],
    re.compile(r"^[a-f0-9]{40}(:.+)?$", re.IGNORECASE):  ["SHA-1", "Double SHA-1", "RIPEMD-160",
                                                          "Haval-160", "Tiger-160", "HAS-160",
                                                          "LinkedIn", "Skein-256(160)", "Skein-512(160)",
                                                          "MangoWeb Enhanced CMS"],
    re.compile(r"^[a-f0-9]{96}$", re.IGNORECASE):        ["SHA-384", "SHA3-384", "Skein-512(384)",
                                                          "Skein-1024(384)"],
    re.compile(r"^[a-f0-9]{16}$", re.IGNORECASE):        ["MySQL323", "DES(Oracle)", "Half MD5",
                                                          "Oracle 7-10g", "FNV-164", "CRC-64"],
    re.compile(r"^\*[a-f0-9]{40}$", re.IGNORECASE):      ["MySQL5.x", "MySQL4.1"],
    re.compile(r"^[a-f0-9]{48}$", re.IGNORECASE):        ["Haval-192", "Tiger-192", "SHA-1(Oracle)",
                                                          "XSHA (v10.4 - v10.6)"]
}

url="http://"+sys.argv[1]+"/"

wordlist=[]
def dir_brute(word):
    try:
        r=requests.get(url=url+word+".html")
        if r.status_code!=404:
            print "The valid path is {}".format(url+word+".html")
            # making requests instance
            reqs = requests.get(url+word+".html")
            if "Login " in reqs.text:
                print "Login page found {}".format(url+word+".html")
            elif "Users" in reqs.text:
                print "Users page found {}".format(url + word + ".html")
            elif "Rabbit " in reqs.text:
                print reqs.text
            for algo,type in HASH_TYPE_REGEX.items():
                if algo.match(reqs.text):
                    print "Hash is %s and page %s" %(reqs.text,url + word + ".html")
            # using the BeautifulSoup module
    except:
        pass


with open('wordlist2.txt') as fh:
    for line in fh:
        wordlist.append(line.strip())

# Run 5 multiple threads. Each call will take the next word in wordlist array
results = ThreadPool(5).imap_unordered(dir_brute, wordlist)
for r in results:
    if r is not None:
        print r
